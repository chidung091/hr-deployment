name: Deploy to DigitalOcean (Dev and Prod)

on:
  repository_dispatch:
    types: [deploy_dev, deploy_prod]

jobs:
  deploy_dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: ‚úÖ Check if the secret exists
        run: |
          if [ -z "${{ secrets.DO_DEV_SSH_PASSWORD }}" ]; then
            echo "‚ùå DO_DEV_SSH_PASSWORD is not set."
            exit 1
          else
            echo "‚úÖ DO_DEV_SSH_PASSWORD is set."
          fi

      - name: üöÄ Only run for dev environment
        if: github.event.action == 'deploy_dev'
        run: echo "Deploying to development environment"

      - name: üîê Connect to DigitalOcean via SSH and deploy (Dev)
        if: github.event.action == 'deploy_dev'
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DO_DEV_DROPLET_IP }}
          username: ${{ secrets.DO_DEV_DROPLET_USER }}
          password: ${{ secrets.DO_DEV_SSH_PASSWORD }}
          port: 22
          script: |
            cd hr-deployment
            git pull

            echo "‚öôÔ∏è Generating .env.dev from GitHub Secrets..."
            cat <<EOF > .env.dev
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            
            TZ=UTC
            PORT=3333
            HOST=0.0.0.0
            LOG_LEVEL=info
            APP_KEY=pMfSR2S2zqAQoo7sKJs8h4GYwM614EYy
            NODE_ENV=development
            SESSION_DRIVER=cookie
            DRIVE_DISK=fs
            
            DB_CONNECTION=postgres
            DB_HOST=postgres
            DB_PORT=5432
            DB_USERNAME=hr_user
            DB_PASSWORD=hr_password_dev
            DB_DATABASE=hr_scanning_dev
            DB_SSL=false
            DB_POOL_MIN=2
            DB_POOL_MAX=10
            DB_DEBUG=false
            
            DATABASE_URL=postgresql://hr_user:hr_password_dev@postgres:5432/hr_scanning_dev
            POSTGRES_HOST=postgres
            POSTGRES_PORT=5432
            POSTGRES_DB=hr_scanning_dev
            POSTGRES_USER=hr_user
            POSTGRES_PASSWORD=hr_password_dev
            IS_DOCKER=true
            
            LIMITER_STORE=database
            EOF
            
                        echo "üßπ Cleaning Docker & deploying containers..."
                        docker system prune -f
                        docker compose -f docker-compose.dev.yml --env-file .env.dev pull
                        docker compose -f docker-compose.dev.yml --env-file .env.dev up -d --build --pull always
            