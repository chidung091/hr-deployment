services:
  postgres:
    image: postgres:15-alpine
    hostname: postgres
    container_name: hr-scanning-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: hr_scanning_dev
      POSTGRES_USER: hr_user
      POSTGRES_PASSWORD: hr_password_dev
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    ports:
      - '5433:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - hr-scanning-dev
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U hr_user -d hr_scanning_dev']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c max_worker_processes=8
      -c max_parallel_workers_per_gather=4
      -c max_parallel_workers=8
      -c max_parallel_maintenance_workers=4



  nextjs-app:
    image: ghcr.io/chidung091/hr-scanning:dev-latest
    ports:
      - "3333:3333" # Different port for dev
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Application Configuration
      TZ: UTC
      PORT: 3333
      HOST: localhost
      LOG_LEVEL: info
      APP_KEY: pMfSR2S2zqAQoo7sKJs8h4GYwM614EYy
      NODE_ENV: development
      SESSION_DRIVER: cookie
      DRIVE_DISK: fs

      # Database Configuration
      DB_CONNECTION: postgres

      # PostgreSQL Configuration (updated for Docker network)
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: hr_user
      DB_PASSWORD: hr_password_dev
      DB_DATABASE: hr_scanning_dev
      DB_SSL: false
      DB_POOL_MIN: 2
      DB_POOL_MAX: 10
      DB_DEBUG: false

      # Legacy database connection environment variables (for compatibility)
      DATABASE_URL: "postgresql://hr_user:hr_password_dev@postgres:5432/hr_scanning_dev"
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: hr_scanning_dev
      POSTGRES_USER: hr_user
      POSTGRES_PASSWORD: hr_password_dev
      IS_DOCKER: true



      # OpenAI Configuration
      OPENAI_API_KEY:

      # Rate Limiting
      LIMITER_STORE: database
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3333 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    platform: linux/x86_64
    volumes:
      - ./public:/usr/share/nginx/html/public # Make sure the public folder is correctly mounted
    networks:
      - hr-scanning-dev

  nginx:
    image: nginx:latest
    depends_on:
      - nextjs-app
    ports:
      - "80:80" # Different port for dev
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro # Separate config for dev
      - ./public:/usr/share/nginx/html/public # Make sure the public folder is accessible
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    platform: linux/x86_64
    networks:
      - hr-scanning-dev

volumes:
  postgres_dev_data:
    driver: local

networks:
  hr-scanning-dev:
    driver: bridge
    name: hr-scanning-dev
